
#######################
#
# Functions
#
#######################

function docker-rm-stopped {
    local name=$1
    local state=$(docker inspect --format "{{.State.Running}}" "$name" 2>/dev/null)

    if [[ "$state" == "false" ]]; then
        docker rm "$name"
    fi
}

function docker-require {
    for container in "$@"; do
        local state=$(docker inspect --format "{{.State.Running}}" "$container" 2>/dev/null)

        if [[ "$state" == "false" ]] || [[ "$state" == "" ]]; then
            echo "$container is not running, starting it for you."
            $container
        fi
    done
}

function docker-ipof {
    for CONTAINER in "$@"
    do
        local STATE=$(docker inspect --format "{{.State.Running}}" "$CONTAINER" 2>/dev/null)

        if [[ "$STATE" == "true" ]]; then
            local IP=$(docker inspect --format "{{.NetworkSettings.IPAddress}}" "$CONTAINER")
            echo "$CONTAINER: $IP"
        fi
    done
}

function docker-prune {
    docker rm $(docker ps --filter status=exited -q 2>/dev/null) 2>/dev/null
    docker rmi $(docker images --filter dangling=true -q 2>/dev/null) 2>/dev/null
}
